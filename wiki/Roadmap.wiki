#summary Roadmap

= Important milestones in our life =

|| 0.9.0 || 01.07.2010 || Release Candidate 1 ||
|| 1.0.0 || 20.07.2010 || Release ||
|| [http://code.google.com/p/acris/issues/list?q=label%3AMilestone-1.0.1 1.0.1] || on request || Bugfixing ||
|| [http://code.google.com/p/acris/issues/list?q=label%3AMilestone-1.1.0 1.1.0] || 20.09.2010        ||  Hladný Hadík release ||
|| [http://code.google.com/p/acris/issues/list?q=label%3AMilestone-1.2.0 1.2.0] || TBD        ||  Malý Macík release ||

= Organization of the development =

All bugs, improvements and feature requests are handled by *issue tracker*. You can always click on the link to the release to see the list of issues.

*Use appropriate template* when submitting an issue.

=Release notes 1.0.1=

==Features==
 * bean wrapper reworked. It is not necessary to register beans into introspector and bean wrapper should be extends any superclass. This allows you to bind beanwrappers with any UI library like smartGWT or ExtGWT without modyfing your domain model
 * registering all adapter providers in a one step
 * type safe writing for beans binding annotations (also nested binding is supported)

==Bug fixes==
 * Fixes in bneas binding (more stable code)

==Improvements==
 * Improved list box binding (selection in list change handled properly)

=Migration guide from 1.0.0 to 1.0.1=
 * Use typesafe annotations instead of string values

Original code (version 1.0.0)
{{{
@BindingField(Customer.COMPANY + "." + CompanyName.NAME)
protected TextBox tbName = GWT.create(TextBox.class);
}}}

New approach (version 1.0.1)
{{{
@BindingField(CustomerBeanWrapper.COMPANY.NAME)
protected TextBox customerName = GWT.create(TextBox.class);
}}}

 * Use a new apapter providers registration

{{{
import sk.seges.acris.binding.client.init.AdaptersRegistration;
...
AdaptersRegistration registration = GWT.create(AdaptersRegistration.class);
registration.registerAllAdapters();
}}}