#summary GoogleSummerOfCode 2010 Ideas

= Improve GWT widgets/components =

*Project:* Acris widgets

*Contact/Mentor:* Peter Simun (simun@seges.sk), Ladislav Gazo (gazo@seges.sk)

*Difficulty:* Medium

*Platform:* Java (1.5+), Google Web Toolkit (2.1+), HTML, CSS (2.1+, 3.x)

*Required skills:* algoritmization, object oriented developement, punctual graphics feeling

*Description and motivation:*
The goal is to provide native support for extending GWT widgets in order to achieve new look & feel of the widgets. L&F should be defined in the gwt.xml file and can be changed without changing the java code. We don't want to develop new full-featured widgets as it is done in GXT or SmartGWT framework. The goal is to easily provide a new theme for standard GWT widgets so then theme can be used in the application built on top of the GWT framework.

*Current state:*
We did a research and protype solution and we were able to switch between different themes. Solution had some performance issues and the solution wasn't perfect at all and we are pretty sure that with the new GWT 2.x we can reach much stable and effective solution.

<table cellpadding="10">
<tr>
<td align="center">[http://acris.googlecode.com/svn/wiki/images/gsoc_widgets_login_pure.png]</td>
<td align="center">[http://acris.googlecode.com/svn/wiki/images/gsoc_widgets_login_helix.png]</td>
<td align="center">[http://acris.googlecode.com/svn/wiki/images/gsoc_widgets_login_metal.png]</td>
</tr>
<tr>
<td align="center">*Core GWT panel - No styles*</td>
<td align="center">*Helix theme*</td>
<td align="center">*Metal theme*</td>
</tr>
</table>

Whilst the problem seems pretty straightforward, there are also additional steps needs to be done:
 * provide at least two different color themes in order to verify switching between them without touching the code
 * prepare showcase that will present all GWT widgets properly styled using selected color theme
 * make widgets wasy to use for various applications, well documented and perfectly prepared

= Acris reporting =

*Project:* Acris reporting

*Contact/Mentor:* Ladislav Gazo (gazo@seges.sk), Peter Simun (simun@seges.sk)

*Difficulty:* Hard

*Platform:* Java (1.5+), Google Web Toolkit (2.1+), Google appengine, Data persistence - ORM (JPA 2.0, Hibernate), Twig perists, portable and enterprise architecture.

*Required skills:* Object oriented developement, strong architecture skills, distributed data storage, complex data processing and optimization

*Description and motivation:* Cloud environment has great possibilities and currently there are some solutions with reporting features but only few of them can be used in the cloud. Unfortunatelly, none of these solutions can be hosted on appengine. Many production applications requires usefull reporting solution so why not to create one? The goal is to carefully plan and design whole reporting solution that runs also on the cloud (Appengine) and also in JEE (ORM based) environment.

*Current state:* Acris-reporting offers the user interface for managing and viewing the reports build on top of the GWT without dependency on the reporting solution (server side). Currently we are able to provide reports based on the Jasper reports/iReport, but unfortunatelly there no way how to serve report in the cloud environment like appengine.

= Text to speech in the Rich internet applications (RIA) =

*Project:* Acris voices (with combination of Acris recorder & player)

*Contact/Mentor:* Peter Simun (simun@seges.sk), Ladislav Gazo (gazo@seges.sk)

*Difficulty:* Hard

*Platform:* Java (1.5+), algoritmization, synthesis and voice manipulation

*Description and motivation:* Support HTML 5 native support (or flash back solution) for text-to-speech in the RIA application. The motivation is to record user operations, combine them with the audio tracks and reach perfect video manuals/tutorials. Whils the audio track is generated from text, that can be localized, application will be able to provide multiple language translations without recording them again and again.

*Current state:* None

= Gneric user interface for security maintenance =

*Project:* Acris security

*Contact/Mentor:* Peter Simun (simun@seges.sk), Ladislav Gazo (gazo@seges.sk)

*Difficulty:* Medium

*Platform:* Java (1.5+), Google Web Toolkit

*Description and motivation:* Many GWT applications uses any kind of user or group maintenance. This solution is done again and again from the scatch because of missing security standards in the GWT framework. 