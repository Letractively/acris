#summary How to create AcrIS-enabled project
#labels Project

= Introduction =

AcrIS is Maven-based project but that doesn't mean it is impossible to use Ant or other build tools... but following examples will use [http://maven.apache.org Maven]

= One-module project =

  * Create new project e.g. using {{{mvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart}}}
    * http://maven.apache.org/archetype/maven-archetype-plugin/usage.html
  * Setup basic GWT project using [http://mojo.codehaus.org/gwt-maven-plugin/ gwt-maven plugin]
  * Enable important AcrIS features by editing *pom.xml*:
    * inherit from acris-os-gwt-parent
{{{
    <parent>
        <groupId>sk.seges.acris</groupId>
        <artifactId>acris-os-gwt-parent</artifactId>
        <version>1.0.18</version>
    </parent>
}}}
    * put AcrIS repository
{{{
	<repositories>
		<repository>
			<id>acris-releases-repo</id>
  			<url>http://acris.googlecode.com/svn/releases-repository/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
}}}
    * add handy properties
{{{
	<properties>
		<gwt.client.module>sk.seges.acris.security.showcase.Site</gwt.client.module>
		<gwt.client.html>Site.html</gwt.client.html>
		
		<acris-os.version>0.9.0</acris-os.version>
	</properties>
}}}
    * configure Maven plugins relevant for GWT
{{{
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
}}}

= Multi-module enterprise project =

TBD.