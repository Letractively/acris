package sk.seges.acris.pap.bean.model;

import com.google.gwt.core.client.GWT;

import java.util.List;

import javax.annotation.Generated;

import sk.seges.acris.core.client.bean.BeanWrapper;

@Generated(value = "sk.seges.acris.pap.bean.BeanWrapperProcessor")
public class DummyBeanBeanWrapper implements BeanWrapper<DummyBean> {

	protected DummyBean beanWrapperContent;

	public String[] getArrayField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.getArrayField();
		}
		return null;
	}

	public Double getDoubleField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.getDoubleField();
		}
		return null;
	}

	public int getIntField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.getIntField();
		}
		return 0;
	}

	public List<String> getListField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.getListField();
		}
		return null;
	}

	private BeanWrapper<ReferencedBean> referencedField__nested;

	public ReferencedBean getReferencedField() {
		if (beanWrapperContent.getReferencedField() == null) {
			return null;
		}
		if (this.referencedField__nested == null) {
			this.referencedField__nested = (sk.seges.acris.core.client.bean.BeanWrapper<sk.seges.acris.pap.bean.model.ReferencedBean>)GWT.create(ReferencedBean.class);
			if(beanWrapperContent != null) {
				this.referencedField__nested.setBeanWrapperContent(beanWrapperContent.getReferencedField());
			}
		}
		return this.referencedField__nested;
	}
	public String getStringField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.getStringField();
		}
		return null;
	}

	public boolean isBooleanField(){
		if (beanWrapperContent != null) {
			return beanWrapperContent.isBooleanField();
		}
		return false;
	}

	public void setArrayField(String[] arrayField) {
		beanWrapperContent.setArrayField(arrayField);
	}

	public void setBooleanField(boolean booleanField) {
		beanWrapperContent.setBooleanField(booleanField);
	}

	public void setDoubleField(Double doubleField) {
		beanWrapperContent.setDoubleField(doubleField);
	}

	public void setIntField(int intField) {
		beanWrapperContent.setIntField(intField);
	}

	public void setListField(List<String> listField) {
		beanWrapperContent.setListField(listField);
	}

	public void setReferencedField(ReferencedBean referencedField) {
		beanWrapperContent.setReferencedField(referencedField);
	}

	public void setStringField(String stringField) {
		beanWrapperContent.setStringField(stringField);
	}

	public void setBeanWrapperContent(DummyBean beanWrapperContent) {
		this.beanWrapperContent = (DummyBean) beanWrapperContent;
		clearWrappers();
	}

	public DummyBean getBeanWrapperContent() {
		return this.beanWrapperContent;
	}

	public Object getBeanAttribute(String attr) {
		if (attr.equals("arrayField")) {
			return this.getArrayField();
		} else if (attr.equals("doubleField")) {
			return this.getDoubleField();
		} else if (attr.equals("intField")) {
			return this.getIntField();
		} else if (attr.equals("listField")) {
			return this.getListField();
		} else if (attr.equals("referencedField")) {
			return this.getReferencedField();
		} else if (attr.equals("stringField")) {
			return this.getStringField();
		} else if (attr.equals("booleanField")) {
			return this.isBooleanField();
		} else if (attr.equals("beanWrapperContent")) {
			return beanWrapperContent;
		} else {
			return null;
		}
	}

	public void setBeanAttribute(String attr, Object value) {
		if (attr.equals("setArrayField")) { 
			this.setArrayField((String[])value);
		} else if (attr.equals("setBooleanField")) { 
			this.setBooleanField((Boolean)value);
		} else if (attr.equals("setDoubleField")) { 
			this.setDoubleField((Double)value);
		} else if (attr.equals("setIntField")) { 
			this.setIntField((Integer)value);
		} else if (attr.equals("setListField")) { 
			this.setListField((List<String>)value);
		} else if (attr.equals("setReferencedField")) { 
			this.setReferencedField((ReferencedBean)value);
		} else if (attr.equals("setStringField")) { 
			this.setStringField((String)value);
		} else if (attr.equals("beanWrapperContent")) {
			this.beanWrapperContent = (DummyBean) value;
		}
	}

	private void clearWrappers() {
		referencedField__nested = null;
	}
}